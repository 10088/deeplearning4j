on:
  push:
jobs:
  build_cross_platform:
    # The host should always be linux
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 2 arch/distro combinations
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-protobuf-linux
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: uraimo/run-on-arch-action@v2.0.8
        name: Build and test with ${{ matrix.arch }} ${{ matrix.distro }}
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            DEBIAN_FRONTEND: noninteractive
            M2_HOME: /opt/maven
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The shell to run commands with in the container
          shell: /bin/sh
          run: |
               echo "Running install on architecture ${{ matrix.arch }}"
                export PATH="/opt/maven/bin:$PATH"
                echo "RUNNING ARCH ${{ matrix.arch }}"
                  case "${{ matrix.arch }}" in
                    armv7)
                        export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-armhf/jre
                        ;;
                      aarch64)
                        export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-arm64/jre"
                        ;;
                    ppc64le)
                          export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-ppc64el/jre
                        ;;
                  esac
                  mkdir -p /opt/maven &&
                  curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | \
                  tar -xzC /opt/maven --strip-components=1
                  mvn --version
                  export PATH="/opt/cmake/bin:/opt/maven/bin:/opt/protobuf/bin:$PATH"
                  cmake --version
                  echo "Running build in ${pwd}"
                  mvn -Djavacpp.platform=linux-arm64 -Pgithub  -pl ":nd4j-native,:libnd4j" --also-make -Dlibnd4j.chip=cpu clean --batch-mode deploy -DskipTests

  build_cross_platform_cuda:
    # The host should always be linux
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 2 arch/distro combinations
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: l4t

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: konduitai/run-on-arch-action@master
        name: Build and test with ${{ matrix.arch }} ${{ matrix.distro }}
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            DEBIAN_FRONTEND: noninteractive
            M2_HOME: /opt/maven
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The shell to run commands with in the container
          shell: /bin/sh
          run: |
            sudo apt -yyq install libssl-dev git
            echo "Running install on architecture ${{ matrix.arch }}"
            bash ./change-cuda-versions.sh 10.2
            mvn  -Pgithub  -Djavacpp.platform=linux-arm64  -Dlibnd4j.chip=gpu  -pl ":nd4j-cuda-10.2,:libnd4j" clean --batch-mode deploy -DskipTests
