on:
  push:
jobs:
  
  windows-x86_64:
    runs-on: windows-2019
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: ./.github/actions/msys2-base-setup
      - name: Run windows cpu build
        shell: cmd
        run: |
          set MSYSTEM=MINGW64
          set "PATH=C:\msys64\usr\bin;%PATH%"
          mvn -Djavacpp.platform=windows-x86_64  -pl "nd4j-native,libnd4j" --also-make -libnd4j.platform=windows-x86_64  -Dlibnd4j.chip=cpu clean install -DskipTests
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn -Pgithub -Djavacpp.parser.skip=true  -pl "nd4j-native,libnd4j" -DskipTests --batch-mode deploy
        shell: cmd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-x86_64-cuda-11-0:
    runs-on: windows-2019
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Use existing msys2 to setup environment
        uses: ./.github/actions/msys2-base-setup
      - uses: konduitai/cuda-install/.github/actions/install-cuda-windows@master
        env:
          cuda: 11.0.167
      - name: Run windows build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set MSYSTEM=MINGW64
          set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.0"
          which cmake
          dir "%CUDA_PATH%"
          dir "%CUDA_PATH%\lib"
          set "PATH=C:\msys64\usr\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.0\lib\x64;%PATH%"
          echo "Running cuda build"
          mvn -Djavacpp.platform=windows-x86_64  -pl "nd4j-cuda-11.0,deeplearning4j-cuda-11.0,libnd4j" --also-make -libnd4j.platform=windows-x86_64 -Pcuda -Dlibnd4j.chip=cuda -Pcuda clean install -DskipTests
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn -Pgithub -Dlibnd4j.compute="5.0 5.2 5.3 6.0 6.2 8.0"  -pl "nd4j-cuda-11.0,deeplearning4j-cuda-11.0,libnd4j" -Djavacpp.parser.skip=true -DskipTests --batch-mode deploy
        shell: cmd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-x86_64-cuda-11-2:
    runs-on: windows-2019
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Use existing msys2 to setup environment
        uses: ./.github/actions/msys2-base-setup
      - uses: konduitai/cuda-install/.github/actions/install-cuda-windows@master
        env:
          cuda: 11.2.1
      - name:  Run cuda build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set MSYSTEM=MINGW64
          set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2"
          dir "%CUDA_PATH%"
          dir "%CUDA_PATH%\lib"
          which cmake
          set "PATH=C:\msys64\usr\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\lib\x64;%PATH%"
          echo "Running cuda build"
          bash ./change-cuda-versions.sh 11.2
          mvn -Dlibnd4j.compute="5.0 5.2 5.3 6.0 6.2 8.0" -Djavacpp.platform=windows-x86_64   -pl "nd4j-cuda-11.2,libnd4j,deeplearning4j-cuda-11.2" --also-make -libnd4j.platform=windows-x86_64 -Pcuda -Dlibnd4j.chip=cuda -Pcuda clean install -DskipTests

      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: mvn -Pgithub  -pl "nd4j-cuda-11.2,deeplearning4j-cuda-11.2,libnd4j" -Djavacpp.parser.skip=true -DskipTests --batch-mode deploy
        shell: cmd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

