on:
  workflow_dispatch:
    inputs:
      buildThreads:
        description: 'Build threads for libnd4j. Used to control memory usage of builds.'
        required: true
        default: 1

      deployToReleaseStaging:
        description: 'Whether to deploy to release staging or not.'
        required: false
        default: 0

      releaseVersion:
        description: 'Release version target'
        required: false
        default: 1.0.0-M1

      snapshotVersion:
        description: 'Snapshot version target'
        required: false
        default: 1.0.0-SNAPSHOT

      releaseRepoId:
        description: 'Release repository id'
        required: false
        default:

      serverId:
        description: 'Server id to publish to'
        required: false
        default: ossrh

      modules:
        description: 'Modules to build'
        required: false
        default:

      libnd4jUrl:
        description: 'Sets a libnd4j download url for this build. LIBND4J_HOME will automatically be set. Should be used when only needing to build other modules.'
        required: false
        default:


      runsOn:
        description: 'OS to run on'
        required: false
        default: windows-2019

      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  windows-x86_64:
    strategy:
      fail-fast: false
      matrix:
        helper: [ mkldnn,"" ]
        extension: [ avx2,avx512,"" ]
    runs-on: ${{ github.event.inputs.runsOn }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'
          server-id:   ${{ github.event.inputs.serverId }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.SONATYPE_GPG_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE


      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: base-devel  git tar pkg-config unzip p7zip zip autoconf autoconf-archive automake patch gnupg  mingw-w64-x86_64-make --noconfirm mingw-w64-x86_64-cmake mingw-w64-x86_64-nasm mingw-w64-x86_64-toolchain mingw-w64-x86_64-libtool mingw-w64-x86_64-gcc  mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-SDL mingw-w64-x86_64-ragel
      - name: Setup windows path
        shell: powershell
        run: echo "C:\msys64\mingw64\bin;C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY:  ${{ secrets.SONATYPE_GPG_KEY }}
          PASSPHRASE:  ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Setup libnd4j home if a download url is specified
        shell: powershell
        run: |
            echo "LIBND4J_HOME=${GITHUB_WORKSPACE}/libnd4j_home/libnd4j" | Out-File -FilePath  "$env:GITHUB_ENV" -Encoding utf8 -Append
            mkdir "%GITHUB_WORKSPACE%/openblas_home"
            cd "%GITHUB_WORKSPACE%/openblas_home"
            wget https://repo1.maven.org/maven2/org/bytedeco/openblas/0.3.13-1.5.5/openblas-0.3.13-1.5.5-windows-x86_64.jar
            unzip openblas-0.3.13-1.5.5-windows-x86_64.jar
            cd ..
            echo "OPENBLAS_PATH=${GITHUB_WORKSPACE}/openblas_home/org/bytedeco/openblas/windows-x86_64/" | Out-File -FilePath  "$env:GITHUB_ENV" -Encoding utf8 -Append
        if: ${{ github.event.inputs.libnd4jUrl != '' }}
      - name: Set mvn build command based on matrix
        shell: powershell
        run: |
                if NOT "${{ matrix.helper }}"=="" (
                    if NOT "${{ matrix.extension }}"=="" (
                       set command="mvn  -Possrh -Dlibnd4j.extension=${{ matrix.extension }} -Djavacpp.platform.extension=${{ matrix.helper }}-${{ matrix.extension }} -Dlibnd4j.buildthreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform=windows-x86_64  -Dlibnd4j.helper=${{ matrix.helper }} -pl \":nd4j-native,:libnd4j\" --also-make -Dlibnd4j.platform=windows-x86_64  -Dlibnd4j.chip=cpu  deploy -DskipTests"
                 )
                 ) else (
                         if NOT "${{ matrix.extension }}"=="" (
                            set command="mvn  -Possrh -Dlibnd4j.extension=${{ matrix.extension }} -Djavacpp.platform.extension=-${{ matrix.extension }} -Dlibnd4j.buildthreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform=windows-x86_64  -Dlibnd4j.helper=${{ matrix.helper }} -pl \":nd4j-native,:libnd4j\" --also-make -Dlibnd4j.platform=windows-x86_64  -Dlibnd4j.chip=cpu  deploy -DskipTests"
                 ) else (
                          set command="mvn  -Possrh -Dlibnd4j.buildthreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform=windows-x86_64  -Dlibnd4j.helper=${{ matrix.helper }} -pl \":nd4j-native,:libnd4j\" --also-make -Dlibnd4j.platform=windows-x86_64  -Dlibnd4j.chip=cpu  deploy -DskipTests"
                )
                )

                echo "Setting command for helper ${{ matrix.helper }} and extension ${{ matrix.extension }} to ${command}"
                echo "COMMAND=%command%" | Out-File -FilePath  "$env:GITHUB_ENV" -Encoding utf8 -Append

      - name: Run windows cpu build
        shell: cmd
        run: |
            if "%PERFORM_RELEASE%"=="1" (
                 echo "Running release"
                 # download libnd4j from a url and set it up if LIBND4J_URL is defined
                 bash "%GITHUB_WORKSPACE%/bootstrap-libnd4j-from-url.sh"
                 bash "%GITHUB_WORKSPACE%/release-specified-component.sh"  "%RELEASE_VERSION%" "%SNAPSHOT_VERSION%" "%RELEASE_REPO_ID%" "%COMMAND%"
            ) else (
                if "%PERFORM_RELEASE%"==1 (
                      echo "Running release"
                       bash "%GITHUB_WORKSPACE%/bootstrap-libnd4j-from-url.sh"
                       bash "%GITHUB_WORKSPACE%/release-specified-component.sh"  "%RELEASE_VERSION%" "%SNAPSHOT_VERSION%" "%RELEASE_REPO_ID%" "%COMMAND%"
                 ) else (
                    echo "Running snapshots"
                    bash "%GITHUB_WORKSPACE%/bootstrap-libnd4j-from-url.sh"
                    echo "%COMMAND%" > run-snapshots.bat
                    call run-snapshots.bat
                 )
            )
        env:
          MAVEN_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_TO: ossrh
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USER_1 }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_USER1_PASS }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.PACKAGES_GPG_PASS }}
          PERFORM_RELEASE: ${{ github.event.inputs.deployToReleaseStaging }}
          RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
          SNAPSHOT_VERSION: ${{ github.event.inputs.snapshotVersion }}
          RELEASE_REPO_ID: ${{ github.event.inputs.releaseRepoId }}
          GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GPG_SIGNING_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
          MODULES: ${{ github.event.inputs.modules  }}
          LIBND4J_URL: ${{ github.event.inputs.libnd4jUrl }}
          HELPER: ${{ matrix.helper }}
          EXTENSION: ${{ matrix.extension }}



      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && failure() }}

