on:
  push:
jobs:
  build_and_test_cross_platform:
    # The host should always be linux
    runs-on: ubuntu-18.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 2 arch/distro combinations
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: ppc64le
            distro: ubuntu18.04


    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: ./.github/actions/download-dl4j-test-resources-linux
      - uses: ./.github/actions/install-protobuf-linux
      - uses: uraimo/run-on-arch-action@v2.0.8
        name: Build and test with ${{ matrix.arch }} ${{ matrix.distro }}
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}



          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            DEBIAN_FRONTEND: noninteractive
            M2_HOME: /opt/maven

          # The shell to run commands with in the container
          shell: /bin/sh
          run: |
               echo "Running install on architecture ${{ matrix.arch }}"
               apt-get -yq  update && apt-get install -y apt-utils build-essential unzip libssl-dev
               echo "After install on architecture ${{ matrix.arch }}"
               apt-get -y --no-install-recommends install curl  default-jre-headless openjdk-8-jdk-headless build-essential
                mkdir -p "/opt/maven"
               curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xzC "/opt/maven" --strip-components=1
               export PATH="/opt/maven/bin:$PATH"
                   echo "RUNNING ARCH ${{ matrix.arch }}"
                            case "${{ matrix.arch }}" in
                              armv7)
                                  export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-armhf/jre
                                  ;;
                                aarch64)
                                  export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-arm64/jre"
                                  ;;
                              ppc64le)
                                    export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-ppc64el/jre
                                  ;;
                  esac
                  mvn --version

                  curl -fsSL http://cmake.org/files/v3.19/cmake-3.19.0.tar.gz | tar xz && cd cmake-3.19.0
                   ./configure --prefix=/opt/cmake && make -j2 && make install && cd .. && rm -r cmake-3.19.0
                  export PATH="/opt/cmake/bin:$PATH"
                  cmake --version
                  echo "Begin run"
                  export PATH="/opt/cmake/bin:/opt/maven/bin:/opt/protobuf/bin:$PATH"
                  mvn -Ptestresources -Ptest-nd4j-native -Dlibnd4j.chip=cpu clean test




