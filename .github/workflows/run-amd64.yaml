on:
  push:
jobs:
  linux-x86_64:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Run tests on linux-x86_64
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
          M2_HOME: /opt/maven
          JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64/jre
        run: |

          echo "/opt/cmake/bin" >> $GITHUB_PATH
          echo "/opt/protobuf/bin" >> $GITHUB_PATH
          echo "/opt/maven/bin" >> $GITHUB_PATH
          sudo apt-get -yq update && \
                             sudo apt-get -y --no-install-recommends install \
                                 wget \
                                 curl \
                                 unzip \
                                 apt-transport-https gnupg \
                                 ca-certificates \
                                 software-properties-common \
                                 git \
                                 build-essential \
                                 gnupg-agent \
                                 dirmngr \
                                 default-jre-headless \
                              openjdk-8-jdk-headless \
                                 libssl-dev \
                                  curl \
                                    ca-certificates \
                                 libgtk2.0-dev

           mkdir -p /opt/maven && \
           curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | \
                             tar -xzC /opt/maven --strip-components=1
           /opt/maven/bin/mvn --version
           curl -fsSL https://cmake.org/files/v3.19/cmake-3.19.0.tar.gz \
                         | tar xz && \
                         cd cmake-3.19.0 && \
                         ./configure --prefix=/opt/cmake && \
                         make -j2 && \
                         make install && \
                         cd .. && \
                         rm -r cmake-3.19.0

           curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \
                         | tar xz && \
                         cd protobuf-3.5.1 && \
                         ./configure --prefix=/opt/protobuf && \
                         make -j2 && \
                         make install && \
                         cd .. && \
                         rm -rf protobuf-3.5.1

           wget https://github.com/KonduitAI/dl4j-test-resources/archive/master.zip && unzip master.zip
          echo "Extracted test resources"
          echo "Verifying programs on path. Path is $PATH"
          export PATH="/opt/cmake/bin:/opt/maven/bin:/opt/protobuf/bin:$PATH"
          echo "Path post update is $PATH. Maven is at `which mvn` cmake is at `which cmake` protoc is at `which protoc`"
          mvn --version
          cmake --version
          protoc --version
          cd dl4j-test-resources-master && mvn clean install -DskipTests && cd ..
          mvn -Ptestresources -Ptest-nd4j-native -Dlibnd4j.chip=cpu clean test

  android-x86_64:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Run tests on linux-x86_64
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
          M2_HOME: /opt/maven
          JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64/jre
        run: |

          echo "/opt/cmake/bin" >> $GITHUB_PATH
          echo "/opt/protobuf/bin" >> $GITHUB_PATH
          echo "/opt/maven/bin" >> $GITHUB_PATH
          sudo apt-get -yq update && \
                             sudo apt-get -y --no-install-recommends install \
                                 wget \
                                 curl \
                                 unzip \
                                 apt-transport-https gnupg \
                                 ca-certificates \
                                 software-properties-common \
                                 git \
                                 build-essential \
                                 gnupg-agent \
                                 dirmngr \
                                 default-jre-headless \
                              openjdk-8-jdk-headless \
                                 libssl-dev \
                                  curl \
                                    ca-certificates \
                                 libgtk2.0-dev

           mkdir -p /opt/maven && \
           curl -fsSL http://apache.osuosl.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | \
                             tar -xzC /opt/maven --strip-components=1
           /opt/maven/bin/mvn --version
           curl -fsSL https://cmake.org/files/v3.19/cmake-3.19.0.tar.gz \
                         | tar xz && \
                         cd cmake-3.19.0 && \
                         ./configure --prefix=/opt/cmake && \
                         make -j2 && \
                         make install && \
                         cd .. && \
                         rm -r cmake-3.19.0

           curl -fsSL https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-cpp-3.5.1.tar.gz \
                         | tar xz && \
                         cd protobuf-3.5.1 && \
                         ./configure --prefix=/opt/protobuf && \
                         make -j2 && \
                         make install && \
                         cd .. && \
                         rm -rf protobuf-3.5.1

          curl -s http://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -o android-ndk-r18b-linux-x86_64.zip && \
          unzip -q android-ndk-r18b-linux-x86_64.zip -d /opt && \
          rm -f android-ndk-r18b-linux-x86_64.zip

           wget https://github.com/KonduitAI/dl4j-test-resources/archive/master.zip && unzip master.zip
          echo "Extracted test resources"
          echo "Verifying programs on path. Path is $PATH"
          export PATH="/opt/cmake/bin:/opt/maven/bin:/opt/protobuf/bin:$PATH"
          echo "Path post update is $PATH. Maven is at `which mvn` cmake is at `which cmake` protoc is at `which protoc`"
          mvn --version
          cmake --version
          protoc --version
          cd dl4j-test-resources-master && mvn clean install -DskipTests && cd ..
          mvn -Ptestresources-Djavacpp.platform=android-x86_64 -libnd4j.platform=android-x86_64 -Ptest-nd4j-native -Dlibnd4j.chip=cpu clean test


  windows-x86_64:
    runs-on: windows-2019
    steps:
      - name: Install and run tests
        shell: cmd
        run: |
          echo Installing MSYS2
          C:\msys64\usr\bin\bash -lc "pacman -S --needed --noconfirm base-devel git tar pkg-config unzip p7zip zip autoconf autoconf-archive automake make patch gnupg wget"
          C:\msys64\usr\bin\bash -lc "pacman -S --needed --noconfirm mingw-w64-x86_64-nasm mingw-w64-x86_64-toolchain mingw-w64-x86_64-libtool mingw-w64-x86_64-gcc mingw-w64-i686-gcc mingw-w64-x86_64-gcc-fortran mingw-w64-i686-gcc-fortran mingw-w64-x86_64-libwinpthread-git mingw-w64-i686-libwinpthread-git mingw-w64-x86_64-SDL mingw-w64-i686-SDL mingw-w64-x86_64-protobuf mingw-w64-x86_64-ragel"
          set "PATH=C:\msys64\usr\bin;%PATH%"
          echo "Installing Windows SDK 8.1"
          wget -O  sdksetup.exe https://go.microsoft.com/fwlink/p/?LinkId=323507
          .\sdksetup.exe /features OptionId.WindowsDesktopSoftwareDevelopmentKit OptionId.NetFxSoftwareDevelopmentKit /quiet
          echo "Removing broken stuff from WSL and MSYS2"
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set MSYSTEM=MINGW64
          wget -O master.zip https://github.com/KonduitAI/dl4j-test-resources/archive/master.zip
          unzip master.zip
          echo "Extracted test resources"
          mvn -Ptestresources-Djavacpp.platform=windows-x86_64 -libnd4j.platform=windows-x86_64 -Ptest-nd4j-native -Dlibnd4j.chip=cpu clean test



